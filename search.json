[{"path":"http://maialab.org/mskcc.oncotree/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Ramiro Magno Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://maialab.org/mskcc.oncotree/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ramiro Magno. Author, maintainer. Isabel Duarte. Author. Ana-Teresa Maia. Author. . Copyright holder, funder.","code":""},{"path":"http://maialab.org/mskcc.oncotree/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Magno R, Duarte , Maia (2022). mskcc.oncotree: Interface 'OncoTree' API. R package version 0.1.1, https://maialab.org/mskcc.oncotree/.","code":"@Manual{,   title = {mskcc.oncotree: Interface to the 'OncoTree' API},   author = {Ramiro Magno and Isabel Duarte and Ana-Teresa Maia},   year = {2022},   note = {R package version 0.1.1},   url = {https://maialab.org/mskcc.oncotree/}, }"},{"path":"http://maialab.org/mskcc.oncotree/index.html","id":"mskcconcotree","dir":"","previous_headings":"","what":"Interface to the OncoTree API","title":"Interface to the OncoTree API","text":"goal mskcc.oncotree facilitate access OncoTree API. OncoTree open-source ontology developed Memorial Sloan Kettering Cancer Center (MSK) standardizing cancer type diagnosis clinical perspective assigning diagnosis unique OncoTree code. Currently, functionality provided retrieval tumor types mapping tumor type codes across tumor type classification systems.","code":""},{"path":"http://maialab.org/mskcc.oncotree/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to the OncoTree API","text":"Install mskcc.oncotree CRAN: can install development version mskcc.oncotree :","code":"install.packages(\"mskcc.oncotree\") # install.packages(\"remotes\") remotes::install_github(\"maialab/mskcc.oncotree\")"},{"path":"http://maialab.org/mskcc.oncotree/index.html","id":"oncotree-tumor-types","dir":"","previous_headings":"","what":"OncoTree tumor types","title":"Interface to the OncoTree API","text":"Get tumor types defined OncoTree latest release: mapping corresponding tumor type identifier(s) Uniﬁed Medical Language System (UMLS) National Cancer Institute (NCI) Thesaurus classification systems provided columns umls_code nci_code. umls_code nci_code list-columns mapping can one--many. want, may convert columns type character unnesting tidyr::unnest(). side effect creating one row per tumor type cases mapping one--many.","code":"library(mskcc.oncotree)  (tumor_types <- get_tumor_types()) #> # A tibble: 885 × 13 #>    oncotree_version  oncotree_code oncotree_name   oncotree_main_t… tissue level #>    <chr>             <chr>         <chr>           <chr>            <chr>  <int> #>  1 oncotree_latest_… MMB           Medullomyoblas… Embryonal Tumor  CNS/B…     3 #>  2 oncotree_latest_… GCB           Germinal Cente… Mature B-Cell N… Lymph…     6 #>  3 oncotree_latest_… SBLU          Splenic B-Cell… Mature B-Cell N… Lymph…     5 #>  4 oncotree_latest_… OHNCA         Head and Neck … Head and Neck C… Head …     2 #>  5 oncotree_latest_… PAOS          Parosteal Oste… Bone Cancer      Bone       3 #>  6 oncotree_latest_… TMDS          Therapy-Relate… Leukemia         Myelo…     5 #>  7 oncotree_latest_… ARMS          Alveolar Rhabd… Soft Tissue Sar… Soft …     3 #>  8 oncotree_latest_… SCST          Sex Cord Strom… Sex Cord Stroma… Ovary…     2 #>  9 oncotree_latest_… ITLPDGI       Indolent T-Cel… Mature T and NK… Lymph…     5 #> 10 oncotree_latest_… MBC           Metaplastic Br… Breast Cancer    Breast     2 #> # … with 875 more rows, and 7 more variables: parent <chr>, umls_code <list>, #> #   nci_code <list>, history <list>, revocations <list>, precursors <list>, #> #   color <chr> tumor_types[c('oncotree_code', 'umls_code', 'nci_code')] #> # A tibble: 885 × 3 #>    oncotree_code umls_code nci_code  #>    <chr>         <list>    <list>    #>  1 MMB           <chr [1]> <chr [1]> #>  2 GCB           <NULL>    <NULL>    #>  3 SBLU          <NULL>    <NULL>    #>  4 OHNCA         <NULL>    <NULL>    #>  5 PAOS          <chr [1]> <chr [1]> #>  6 TMDS          <NULL>    <NULL>    #>  7 ARMS          <chr [1]> <chr [1]> #>  8 SCST          <chr [1]> <chr [1]> #>  9 ITLPDGI       <NULL>    <NULL>    #> 10 MBC           <chr [1]> <chr [1]> #> # … with 875 more rows tumor_types[c('oncotree_code', 'umls_code')] %>%   tidyr::unnest(cols = 'umls_code', keep_empty = TRUE) #> # A tibble: 886 × 2 #>    oncotree_code umls_code #>    <chr>         <chr>     #>  1 MMB           C0205833  #>  2 GCB           <NA>      #>  3 SBLU          <NA>      #>  4 OHNCA         <NA>      #>  5 PAOS          C0206642  #>  6 TMDS          <NA>      #>  7 ARMS          C0206655  #>  8 SCST          C0600113  #>  9 ITLPDGI       <NA>      #> 10 MBC           C1334708  #> # … with 876 more rows"},{"path":"http://maialab.org/mskcc.oncotree/index.html","id":"oncotree-versions","dir":"","previous_headings":"","what":"OncoTree versions","title":"Interface to the OncoTree API","text":"data provided OncoTree versioned. may list released versions far get_versions(): function get_tumor_types() accepts release version, allowing get data past versions OncoTree:","code":"get_versions() #> # A tibble: 28 × 4 #>    oncotree_version           description                   visible release_date #>    <chr>                      <chr>                         <lgl>   <chr>        #>  1 oncotree_development       Latest OncoTree under develo… TRUE    2021-11-04   #>  2 oncotree_candidate_release This version of the OncoTree… TRUE    2021-11-03   #>  3 oncotree_2021_11_02        Stable OncoTree released on … FALSE   2021-11-02   #>  4 oncotree_latest_stable     This is the latest approved … TRUE    2021-11-02   #>  5 oncotree_2020_10_01        Stable OncoTree released on … FALSE   2020-10-01   #>  6 oncotree_2020_04_01        Stable OncoTree released on … FALSE   2020-04-01   #>  7 oncotree_2020_02_06        Stable OncoTree released on … FALSE   2020-02-06   #>  8 oncotree_2020_02_01        Stable OncoTree released on … FALSE   2020-02-01   #>  9 oncotree_2019_12_01        Stable OncoTree released on … FALSE   2019-12-01   #> 10 oncotree_2019_08_01        Stable OncoTree released on … FALSE   2019-08-01   #> # … with 18 more rows get_tumor_types(oncotree_version = 'oncotree_2019_08_01') #> # A tibble: 863 × 13 #>    oncotree_version    oncotree_code oncotree_name oncotree_main_t… tissue level #>    <chr>               <chr>         <chr>         <chr>            <chr>  <int> #>  1 oncotree_2019_08_01 MMB           Medullomyobl… Embryonal Tumor  CNS/B…     3 #>  2 oncotree_2019_08_01 GCB           Germinal Cen… Mature B-Cell N… Lymph…     6 #>  3 oncotree_2019_08_01 SBLU          Splenic B-Ce… Mature B-Cell N… Lymph…     5 #>  4 oncotree_2019_08_01 OHNCA         Head and Nec… Head and Neck C… Head …     2 #>  5 oncotree_2019_08_01 PAOS          Parosteal Os… Bone Cancer      Bone       3 #>  6 oncotree_2019_08_01 TMDS          Therapy-Rela… Leukemia         Myelo…     5 #>  7 oncotree_2019_08_01 ARMS          Alveolar Rha… Soft Tissue Sar… Soft …     3 #>  8 oncotree_2019_08_01 SCST          Sex Cord Str… Sex Cord Stroma… Ovary…     2 #>  9 oncotree_2019_08_01 ITLPDGI       Indolent T-C… Mature T and NK… Lymph…     5 #> 10 oncotree_2019_08_01 MBC           Metaplastic … Breast Cancer    Breast     2 #> # … with 853 more rows, and 7 more variables: parent <chr>, umls_code <list>, #> #   nci_code <list>, history <list>, revocations <list>, precursors <list>, #> #   color <chr>"},{"path":[]},{"path":"http://maialab.org/mskcc.oncotree/index.html","id":"umls-and-ncit","dir":"","previous_headings":"Mapping of tumor type codes","what":"UMLS and NCIt","title":"Interface to the OncoTree API","text":"OncoTree provides mappings identifiers (codes) tumor classification systems. Currently, web API, mappings OncoTree codes Uniﬁed Medical Language System (UMLS) National Cancer Institute (NCI) Thesaurus (NCIt) codes provided. mskcc.oncotree provide four functions:","code":""},{"path":"http://maialab.org/mskcc.oncotree/index.html","id":"from-and-to-ncit","dir":"","previous_headings":"Mapping of tumor type codes","what":"From and to NCIt","title":"Interface to the OncoTree API","text":"","code":"oncotree_to_nci(c('MMB', 'PAOS'), expand = TRUE) #> # A tibble: 2 × 2 #>   oncotree_code nci_code #>   <chr>         <chr>    #> 1 MMB           C3706    #> 2 PAOS          C8969  nci_to_oncotree(c('C3706', 'C8969'), expand = TRUE) #> # A tibble: 2 × 2 #>   nci_code oncotree_code #>   <chr>    <chr>         #> 1 C3706    MMB           #> 2 C8969    PAOS"},{"path":"http://maialab.org/mskcc.oncotree/index.html","id":"from-and-to-umls","dir":"","previous_headings":"Mapping of tumor type codes","what":"From and to UMLS","title":"Interface to the OncoTree API","text":"","code":"oncotree_to_umls(c('MMB', 'PAOS'), expand = TRUE) #> # A tibble: 2 × 2 #>   oncotree_code umls_code #>   <chr>         <chr>     #> 1 MMB           C0205833  #> 2 PAOS          C0206642  umls_to_oncotree(c('C0205833', 'C0206642', 'C1334708'), expand = TRUE) #> # A tibble: 3 × 2 #>   umls_code oncotree_code #>   <chr>     <chr>         #> 1 C0205833  MMB           #> 2 C0206642  PAOS          #> 3 C1334708  MBC"},{"path":"http://maialab.org/mskcc.oncotree/index.html","id":"other-mappings","dir":"","previous_headings":"Mapping of tumor type codes","what":"Other mappings","title":"Interface to the OncoTree API","text":"Besides UMLS NCIt, may also map OncoTree codes ICD-O topography morphology, HemeOnc codes. functionality based file ontology_mappings.txt. provided OncoTree GitHub repository. OncoTree’s discussion forum developers warned data can’t expected neither accurate complete. However, might still useful users, hence also provide access mappings function map_ontology_code(). usage examples map_ontology_code():","code":"# Simple example map_ontology_code(code = 'MMB', from = 'oncotree_code', to = 'nci_code') #> # A tibble: 1 × 2 #>   oncotree_code nci_code #>   <chr>         <chr>    #> 1 MMB           C3706  # Omit the `code` argument to get all possible mappings. Note that # one-to-many mappings will generate more than one row per `from` code. map_ontology_code(from = 'oncotree_code', to = 'nci_code') #> # A tibble: 855 × 2 #>    oncotree_code nci_code #>    <chr>         <chr>    #>  1 MMB           C3706    #>  2 AIS           C4123    #>  3 AASTR         C9477    #>  4 FL            C3209    #>  5 VIMT          C4286    #>  6 KIDNEY        C12415   #>  7 MDEP          C4327    #>  8 PAOS          C8969    #>  9 PRSCC         C6766    #> 10 DSTAD         C9159    #> # … with 845 more rows  # Some mappings are one-to-many, e.g. \"SRCCR\", which means repeated rows for # the same input code. map_ontology_code(code = 'SRCCR', from = 'oncotree_code', to = 'nci_code') #> # A tibble: 2 × 2 #>   oncotree_code nci_code #>   <chr>         <chr>    #> 1 SRCCR         C9168    #> 2 SRCCR         C7967  # Using the `collapse` argument to \"collapse\" one-to-many mappings makes sure # that the output has as many rows as the `from` vector. map_ontology_code(code = 'SRCCR',                   from = 'oncotree_code',                   to = 'nci_code',                   collapse = toString) #> # A tibble: 1 × 2 #>   oncotree_code nci_code     #>   <chr>         <chr>        #> 1 SRCCR         C9168, C7967  map_ontology_code(code = 'SRCCR',                   from = 'oncotree_code',                   to = 'nci_code',                   collapse = list) #> # A tibble: 1 × 2 #>   oncotree_code nci_code  #>   <chr>         <list>    #> 1 SRCCR         <chr [2]>  map_ontology_code(   code = 'SRCCR',   from = 'oncotree_code',   to = 'nci_code',   collapse = \\(x) paste(x, collapse = ' ') ) #> # A tibble: 1 × 2 #>   oncotree_code nci_code    #>   <chr>         <chr>       #> 1 SRCCR         C9168 C7967  # `map_ontology_code()` is vectorized over `code` map_ontology_code(code = c('AASTR', 'MDEP'), from = 'oncotree_code', to = 'nci_code') #> # A tibble: 2 × 2 #>   oncotree_code nci_code #>   <chr>         <chr>    #> 1 AASTR         C9477    #> 2 MDEP          C4327  # Map from ICDO topography to ICDO morphology codes map_ontology_code(code = 'C72.9', from = 'icdo_topography_code', to = 'icdo_morphology_code') #> # A tibble: 65 × 2 #>    icdo_topography_code icdo_morphology_code #>    <chr>                <chr>                #>  1 C72.9                9401/3               #>  2 C72.9                9501/3               #>  3 C72.9                9390/1               #>  4 C72.9                8000/3               #>  5 C72.9                9424/3               #>  6 C72.9                9391/3               #>  7 C72.9                9425/3               #>  8 C72.9                9383/1               #>  9 C72.9                9100/3               #> 10 C72.9                9522/3               #> # … with 55 more rows"},{"path":"http://maialab.org/mskcc.oncotree/reference/get_tumor_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tumor types — get_tumor_types","title":"Get tumor types — get_tumor_types","text":"Get tumor types according OncoTree's ontology.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/get_tumor_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tumor types — get_tumor_types","text":"","code":"get_tumor_types(oncotree_version = \"oncotree_latest_stable\")"},{"path":"http://maialab.org/mskcc.oncotree/reference/get_tumor_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tumor types — get_tumor_types","text":"oncotree_version OncoTree version. Check available options get_versions().","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/get_tumor_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tumor types — get_tumor_types","text":"tibble 13 variables: oncotree_version OncoTree tumor classification system version. oncotree_code Tumor type code: unique identifier tumor type within classification system OncoTree. oncotree_name Tumor type name: brief description tumor type. oncotree_main_type Tumor main type: category tumor type can grouped. tissue Tissue associated tumor type. level OncoTree hierachical classification system 5 levels. root level (level 0) single \"TISSUE\" tumor type. level 1, 32 tissue sites, e.g., \"BREAST\". parent parent parent oncotree_code tumor type. umls_code corresponding tumor type identifier(s) Unified Medical Language System (UMLS). nci_code corresponding tumor type identifier(s) National Cancer Institute (NCI) Thesaurus. history Previous tumor type codes (previous OncoTree versions) used identify tumor type. revocations TODO. precursors TODO. color Color associated tumor type.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/get_tumor_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tumor types — get_tumor_types","text":"","code":"if (FALSE) { get_tumor_types() }"},{"path":"http://maialab.org/mskcc.oncotree/reference/get_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OncoTree versions — get_versions","title":"Get OncoTree versions — get_versions","text":"Get OncoTree versions","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/get_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OncoTree versions — get_versions","text":"","code":"get_versions()"},{"path":"http://maialab.org/mskcc.oncotree/reference/get_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OncoTree versions — get_versions","text":"tibble four variables: oncotree_version OncoTree tumor classification system version. description OncoTree release description. visible logical indicating whether OncoTree version visible, .e. forefront option website. release_date OncoTree release date.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/get_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OncoTree versions — get_versions","text":"","code":"if (FALSE) { get_versions() }"},{"path":"http://maialab.org/mskcc.oncotree/reference/logical_to_character.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a logical vector to character — logical_to_character","title":"Converts a logical vector to character — logical_to_character","text":"function converts logical vector character vector allowing control case even convert integer 0 1 desired.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/logical_to_character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a logical vector to character — logical_to_character","text":"","code":"logical_to_character(   x,   format = c(\"lowercase\", \"uppercase\", \"titlecase\", \"integer\") )"},{"path":"http://maialab.org/mskcc.oncotree/reference/logical_to_character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a logical vector to character — logical_to_character","text":"x logical vector. format Controls text generated.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/logical_to_character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a logical vector to character — logical_to_character","text":"character vector.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/map_ontology_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Map tumor types across ontologies — map_ontology_code","title":"Map tumor types across ontologies — map_ontology_code","text":"function maps codes (identifiers) across tumor classification systems. Use arguments choose source target ontologies. Available options : 'oncotree_code', 'nci_code', 'umls_code', 'icdo_topography_code', 'icdo_morphology_code', 'hemeonc_code'. Note can also use functions oncotree_to_nci(), nci_to_oncotree(), oncotree_to_umls() umls_to_oncotree() map OncoTree NCIt systems. difference functions use OncoTree API, output can made depend older versions OncoTree. map_ontology_code() relies static file provided OncoTree team date data provided web API. Nevetheless, scope mappings provided map_ontology_code() broader. file used map_ontology_code() can directly imported R using function read_ontology_mappings().","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/map_ontology_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map tumor types across ontologies — map_ontology_code","text":"","code":"map_ontology_code(code, from, to, collapse = NULL)"},{"path":"http://maialab.org/mskcc.oncotree/reference/map_ontology_code.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Map tumor types across ontologies — map_ontology_code","text":"mappings provided based file https://github.com/cBioPortal/oncotree/blob/master/scripts/ontology_to_ontology_mapping_tool/ontology_mappings.txt.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/map_ontology_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map tumor types across ontologies — map_ontology_code","text":"code character vector identifier codes ontology meant mapped ontology. source ontology. One : 'oncotree_code', 'nci_code', 'umls_code', 'icdo_topography_code', 'icdo_morphology_code', 'hemeonc_code'. target ontology. One : 'oncotree_code', 'nci_code', 'umls_code', 'icdo_topography_code', 'icdo_morphology_code', 'hemeonc_code'. collapse function expects one argument, character vector codes variable, \"collapsed\". mapping one--many, passing collapsing function allow make mapping one--one. See examples.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/map_ontology_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map tumor types across ontologies — map_ontology_code","text":"tibble two variables: first column corresponds variable second variable.","code":""},{"path":[]},{"path":"http://maialab.org/mskcc.oncotree/reference/map_ontology_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map tumor types across ontologies — map_ontology_code","text":"","code":"if (FALSE) { # Omit the `code` argument to get all possible mappings. Note that # one-to-many mappings will generate more than one row per `from` code. map_ontology_code(from = 'oncotree_code', to = 'nci_code')  # Simple example map_ontology_code('MMB', from = 'oncotree_code', to = 'nci_code')  # Some mappings are one-to-many, e.g. \"SRCCR\", which means repeated rows for # the same input code. map_ontology_code('SRCCR', from = 'oncotree_code', to = 'nci_code')  # Using the `collapse` argument to \"collapse\" one-to-many mappings makes sure # that the output has as many rows as the `from` vector. map_ontology_code('SRCCR',                   from = 'oncotree_code',                   to = 'nci_code',                   collapse = toString)  map_ontology_code('SRCCR',                   from = 'oncotree_code',                   to = 'nci_code',                   collapse = list)  map_ontology_code(   'SRCCR',   from = 'oncotree_code',   to = 'nci_code',   collapse = \\(x) paste(x, collapse = ' ') )  # `map_ontology_code()` is vectorized over `code` map_ontology_code(   c('AASTR', 'MDEP'),   from = 'oncotree_code',   to = 'nci_code'   )  # Map from ICDO topography to ICDO morphology codes map_ontology_code(   'C72.9',   from = 'icdo_topography_code',   to = 'icdo_morphology_code'   ) }"},{"path":"http://maialab.org/mskcc.oncotree/reference/mskcc.oncotree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mskcc.oncotree: Interface to the 'OncoTree' API — mskcc.oncotree-package","title":"mskcc.oncotree: Interface to the 'OncoTree' API — mskcc.oncotree-package","text":"Programmatic access 'OncoTree' API http://oncotree.mskcc.org/. Get access tumor main types, identifiers utility routines map across tumor classification systems.","code":""},{"path":[]},{"path":"http://maialab.org/mskcc.oncotree/reference/mskcc.oncotree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mskcc.oncotree: Interface to the 'OncoTree' API — mskcc.oncotree-package","text":"Maintainer: Ramiro Magno ramiro.magno@gmail.com (ORCID) Authors: Isabel Duarte iduarte.scientist@gmail.com (ORCID) Ana-Teresa Maia maia.anateresa@gmail.com (ORCID) contributors: CINTESIS [copyright holder, funder]","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/nci_to_oncotree.html","id":null,"dir":"Reference","previous_headings":"","what":"Map NCI to OncoTree codes — nci_to_oncotree","title":"Map NCI to OncoTree codes — nci_to_oncotree","text":"function maps National Cancer Institute Thesaurus (NCIt) codes OncoTree codes.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/nci_to_oncotree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map NCI to OncoTree codes — nci_to_oncotree","text":"","code":"nci_to_oncotree(   nci_code = NULL,   oncotree_version = \"oncotree_latest_stable\",   expand = FALSE )"},{"path":"http://maialab.org/mskcc.oncotree/reference/nci_to_oncotree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map NCI to OncoTree codes — nci_to_oncotree","text":"nci_code NCI codes. oncotree_version OncoTree database release version. expand Whether expand one--many mappings. TRUE, one--many mappings expanded several rows output.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/nci_to_oncotree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map NCI to OncoTree codes — nci_to_oncotree","text":"tibble two variables: nci_code oncotree_code.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/nci_to_oncotree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map NCI to OncoTree codes — nci_to_oncotree","text":"","code":"if (FALSE) { # Leave `nci_code` empty to return mappings for all NCI codes nci_to_oncotree()  # Map a few selected OncoTree codes nci_to_oncotree(nci_code = c('C8969', 'C4862', 'C9168', 'C7967'))  # Use `expand` to make sure the column `oncotree_code` is a character vector # and not a list-column. One-to-many mappings will result in more than row # with `oncotree_code` values repeated. nci_to_oncotree(nci_code = c('C8969', 'C4862', 'C9168', 'C7967'), expand = TRUE) }"},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_nci.html","id":null,"dir":"Reference","previous_headings":"","what":"Map OncoTree to NCIt codes — oncotree_to_nci","title":"Map OncoTree to NCIt codes — oncotree_to_nci","text":"function maps OncoTree codes  National Cancer Institute Thesaurus (NCIt) codes.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_nci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map OncoTree to NCIt codes — oncotree_to_nci","text":"","code":"oncotree_to_nci(   oncotree_code = NULL,   oncotree_version = \"oncotree_latest_stable\",   expand = FALSE,   keep_empty = TRUE )"},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_nci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map OncoTree to NCIt codes — oncotree_to_nci","text":"oncotree_code OncoTree codes. oncotree_version OncoTree database release version. expand Whether expand one--many mappings. TRUE, one--many mappings expanded several rows output. keep_empty OncoTree codes map NCI nci_code NA keep_empty = TRUE. Use keep_empty = FALSE, remove mapping (row) altogether output.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_nci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map OncoTree to NCIt codes — oncotree_to_nci","text":"tibble two variables: oncotree_code nci_code.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_nci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map OncoTree to NCIt codes — oncotree_to_nci","text":"","code":"if (FALSE) { # Leave `oncotree_code` empty to return mappings for all OncoTree codes oncotree_to_nci()  # Map a few selected OncoTree codes oncotree_to_nci(oncotree_code = c('PAOS', 'SCST', 'ITLPDGI', 'SRCCR'))  # Use `expand` to make sure the column `nci_code` is a character vector and # not a list-column. One-to-many mappings will result in more than row with # `oncotree_code` values repeated. oncotree_to_nci(oncotree_code = c('PAOS', 'SCST', 'ITLPDGI', 'SRCCR'), expand = TRUE)  # Use `keep_empty` to drop or keep one-to-none mappings oncotree_to_nci(oncotree_code = c('PAOS', 'SCST', 'ITLPDGI', 'SRCCR'), expand = TRUE, keep_empty = FALSE) }"},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_umls.html","id":null,"dir":"Reference","previous_headings":"","what":"Map OncoTree to UMLS codes — oncotree_to_umls","title":"Map OncoTree to UMLS codes — oncotree_to_umls","text":"function maps OncoTree codes Unified Medical Language System (UMLS) codes.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_umls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map OncoTree to UMLS codes — oncotree_to_umls","text":"","code":"oncotree_to_umls(   oncotree_code = NULL,   oncotree_version = \"oncotree_latest_stable\",   expand = FALSE,   keep_empty = TRUE )"},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_umls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map OncoTree to UMLS codes — oncotree_to_umls","text":"oncotree_code OncoTree codes. oncotree_version OncoTree database release version. expand Whether expand one--many mappings. TRUE, one--many mappings expanded several rows output. keep_empty OncoTree codes map UMLS umls_code NA keep_empty = TRUE. Use keep_empty = FALSE, remove mapping (row) altogether output.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_umls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map OncoTree to UMLS codes — oncotree_to_umls","text":"tibble two variables: oncotree_code umls_code.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/oncotree_to_umls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map OncoTree to UMLS codes — oncotree_to_umls","text":"","code":"if (FALSE) { # Leave `oncotree_code` empty to return mappings for all OncoTree codes oncotree_to_umls()  # Map a few selected OncoTree codes oncotree_to_umls(oncotree_code = c('PAOS', 'SCST', 'ITLPDGI', 'SRCCR'))  # Use `expand` to make sure the column `umls_code` is a character vector and # not a list-column. One-to-many mappings will result in more than row with # `oncotree_code` values repeated. oncotree_to_umls(oncotree_code = c('PAOS', 'SCST', 'ITLPDGI', 'SRCCR'),   expand = TRUE)  # Use `keep_empty` to drop or keep one-to-none mappings oncotree_to_umls(oncotree_code = c('PAOS', 'SCST', 'ITLPDGI', 'SRCCR'),   expand = TRUE, keep_empty = FALSE) }"},{"path":"http://maialab.org/mskcc.oncotree/reference/open_in_nci_thesaurus.html","id":null,"dir":"Reference","previous_headings":"","what":"Browse the NCIt — open_in_nci_thesaurus","title":"Browse the NCIt — open_in_nci_thesaurus","text":"Opens web browser NCI Thesaurus entries provided NCI codes.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/open_in_nci_thesaurus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Browse the NCIt — open_in_nci_thesaurus","text":"","code":"open_in_nci_thesaurus(nci_code)"},{"path":"http://maialab.org/mskcc.oncotree/reference/open_in_nci_thesaurus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Browse the NCIt — open_in_nci_thesaurus","text":"nci_code character vector NCI codes.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/open_in_nci_thesaurus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Browse the NCIt — open_in_nci_thesaurus","text":"Run side effect.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/open_in_nci_thesaurus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Browse the NCIt — open_in_nci_thesaurus","text":"","code":"if (FALSE) { open_in_nci_thesaurus('C3107') }"},{"path":"http://maialab.org/mskcc.oncotree/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"http://maialab.org/mskcc.oncotree/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/read_ontology_mappings.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads ontology_mappings.txt from OncoTree's GitHub repository — read_ontology_mappings","title":"Reads ontology_mappings.txt from OncoTree's GitHub repository — read_ontology_mappings","text":"Reads `ontology_mappings.txt` OncoTree's GitHub repository returns contents tibble.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/read_ontology_mappings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads ontology_mappings.txt from OncoTree's GitHub repository — read_ontology_mappings","text":"","code":"read_ontology_mappings(   url = ontology_mapping_url(),   fix_names = TRUE,   list_columns = TRUE )"},{"path":"http://maialab.org/mskcc.oncotree/reference/read_ontology_mappings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads ontology_mappings.txt from OncoTree's GitHub repository — read_ontology_mappings","text":"url URL `ontology_mappings.txt`. fix_names Whether convert column names lowercase, snakecase. list_columns Whether return multi-value variables list-columns.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/read_ontology_mappings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads ontology_mappings.txt from OncoTree's GitHub repository — read_ontology_mappings","text":"[tibble][tibble::tibble-package] six variables: `oncotree_code` OncoTree code. `nci_code` National Cancer Institute (NCI) Thesaurus code. `umls_code` Unified Medical Language System (UMLS) code. `icdo_topography_code` ICD-O topography code. `icdo_morphology_code` ICD-O morphology code. `hemeonc_code` HemeOnc code.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/read_ontology_mappings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads ontology_mappings.txt from OncoTree's GitHub repository — read_ontology_mappings","text":"","code":"if (FALSE) { # Import ontology_mappings.txt as tibble read_ontology_mappings()  # Do not convert column names, i.e. keep them as originally in the file read_ontology_mappings(fix_names = FALSE)  # Keep multi-value columns as originally, i.e. as comma-separated values read_ontology_mappings(list_columns = FALSE) }"},{"path":"http://maialab.org/mskcc.oncotree/reference/umls_to_oncotree.html","id":null,"dir":"Reference","previous_headings":"","what":"Map UMLS to OncoTree codes — umls_to_oncotree","title":"Map UMLS to OncoTree codes — umls_to_oncotree","text":"function maps Unified Medical Language System (UMLS) codes OncoTree codes.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/umls_to_oncotree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map UMLS to OncoTree codes — umls_to_oncotree","text":"","code":"umls_to_oncotree(   umls_code = NULL,   oncotree_version = \"oncotree_latest_stable\",   expand = FALSE )"},{"path":"http://maialab.org/mskcc.oncotree/reference/umls_to_oncotree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map UMLS to OncoTree codes — umls_to_oncotree","text":"umls_code UMLS codes. oncotree_version OncoTree database release version. expand Whether expand one--many mappings. TRUE, one--many mappings expanded several rows output.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/umls_to_oncotree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map UMLS to OncoTree codes — umls_to_oncotree","text":"tibble two variables: umls_code oncotree_code.","code":""},{"path":"http://maialab.org/mskcc.oncotree/reference/umls_to_oncotree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map UMLS to OncoTree codes — umls_to_oncotree","text":"","code":"if (FALSE) { # Leave `umls_code` empty to return mappings for all UMLS codes umls_to_oncotree()  # Map a few selected OncoTree codes umls_to_oncotree(umls_code = c('C0206642', 'C0600113', 'C0279654', 'C1707436'))  # Use `expand` to make sure the column `oncotree_code` is a character vector and # not a list-column. One-to-many mappings will result in more than row with # `oncotree_code` values repeated. umls_to_oncotree(umls_code = c('C0206642', 'C0600113', 'C0279654', 'C1707436'), expand = TRUE) }"},{"path":"http://maialab.org/mskcc.oncotree/news/index.html","id":"mskcconcotree-011","dir":"Changelog","previous_headings":"","what":"mskcc.oncotree 0.1.1","title":"mskcc.oncotree 0.1.1","text":"Added NEWS.md file track changes package. Updated examples resilient network response errors.","code":""}]
